 
<div class="demo-container magictime puffIn bg-gray-900 rounded-lg p-4 mb-6 w-full max-w-md shadow-2xl border border-gray-700 cursor-pointer" id="miniDemo">
  <div class="demo-header flex items-center gap-2 mb-3">
    <div class="flex gap-1">
      <div class="w-3 h-3 bg-red-500 rounded-full"></div>
      <div class="w-3 h-3 bg-yellow-500 rounded-full"></div>
      <div class="w-3 h-3 bg-green-500 rounded-full"></div>
    </div>
    <span class="text-gray-400 text-sm ml-2">portfolio.jsx</span>
    <div class="ml-auto flex items-center gap-2">
      <div class="w-4 h-4 text-gray-400">
        <svg viewBox="0 0 24 24" fill="currentColor">
          <path d="M18.71,19.5C17.88,20.74 17,21.95 15.66,21.97C14.32,22 13.89,21.18 12.37,21.18C10.84,21.18 10.37,21.95 9.1,22C7.79,22.05 6.8,20.68 5.96,19.47C4.25,17 2.94,12.45 4.7,9.39C5.57,7.87 7.13,6.91 8.82,6.88C10.1,6.86 11.32,7.75 12.11,7.75C12.89,7.75 14.37,6.68 15.92,6.84C16.57,6.87 18.39,7.1 19.56,8.82C19.47,8.88 17.39,10.19 17.41,12.63C17.44,15.65 20.06,16.66 20.09,16.67C20.06,16.74 19.67,18.11 18.71,19.5M13,3.5C13.73,2.67 14.94,2.04 15.94,2C16.07,3.17 15.6,4.35 14.9,5.19C14.21,6.04 13.07,6.7 11.95,6.61C11.8,5.46 12.36,4.26 13,3.5Z"/>
        </svg>
      </div>
      <span class="text-gray-400 text-xs font-mono">macOS</span>
    </div>
  </div>
  <div class="demo-code text-left text-sm font-mono leading-relaxed">
    <div class="code-line">
      <span class="text-purple-400">const</span> 
      <span class="text-blue-400"> useDeveloper</span> 
      <span class="text-white"> = () => {</span>
    </div>
    <div class="code-line ml-4">
      <span class="text-purple-400">return</span> 
      <span class="text-white"> {</span>
    </div>
    <div class="code-line ml-8">
      <span class="text-green-400">name</span><span class="text-white">:</span> 
      <span class="text-orange-400">'David Salazar'</span><span class="text-white">,</span>
    </div>
    <div class="code-line ml-8">
      <span class="text-green-400">role</span><span class="text-white">:</span> 
      <span class="text-orange-400">'Fron-end developer'</span><span class="text-white">,</span>
    </div>
    <div class="code-line ml-8">
      <span class="text-green-400">experience</span><span class="text-white">:</span> 
      <span class="text-orange-400">'+3 years'</span><span class="text-white">,</span>
    </div>
    <div class="code-line ml-8">
      <span class="text-green-400">skills</span><span class="text-white">:</span> 
      <span class="text-white">[</span><span class="skills-animation"></span><span class="text-white">],</span>
    </div>
    <div class="code-line ml-8">
      <span class="text-green-400">status</span><span class="text-white">:</span> 
      <span class="text-orange-400">'Available for hire'</span>
    </div>
    <div class="code-line ml-4">
      <span class="text-white">};</span>
    </div>
    <div class="code-line">
      <span class="text-white">};</span>
    </div>
  </div>
</div>

<script>
  // Animación de skills en el demo Mac
const skillsArray = ["'HTML'", "'CSS'", "'JavaScript'", "'TypeScript'", "'React'", "'Next.js'", "'Astro'", "'Node.js'", "'Tailwind'", "'Express'", "'Git'", "'MongoDB'"];
  let skillIndex = 0;
  const skillsElement = document.querySelector(".skills-animation");
  
  function animateSkills() {
    if (skillsElement) {
      skillsElement.textContent = skillsArray[skillIndex];
      (skillsElement as HTMLElement).style.color = '#f97316'; // orange-400
      skillIndex = (skillIndex + 1) % skillsArray.length;
    }
  }

  // Función para activar animación foolishIn al hacer clic
  function activateFoolishAnimation() {
    const demoContainer = document.getElementById("miniDemo");
    if (demoContainer) {
       
      demoContainer.classList.remove("puffIn", "foolishIn");
      
       
      demoContainer.offsetHeight;
      
       
      demoContainer.classList.add("foolishIn");
    }
  }
  
   
  document.addEventListener("DOMContentLoaded", function() {
     
    const demoContainer = document.getElementById("miniDemo");
    if (demoContainer) {
      demoContainer.addEventListener("click", activateFoolishAnimation);
    }
    
    setTimeout(animateSkills, 1000);
    setInterval(animateSkills, 1500);
  });
</script>

<style>
   
  @import '../styles/puffIn.css';
  @import '../styles/foolishIn.css';

   
  .demo-container {
    transform: perspective(1000px) rotateX(5deg);
    transition: all 0.3s ease;
     
    animation-duration: 1.5s;
    animation-delay: 0.5s;
    animation-fill-mode: both;
  }

  .demo-container:hover {
    transform: perspective(1000px) rotateX(0deg) translateY(-5px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
  }

  .code-line {
    opacity: 0;
    animation: fadeInUp 0.8s ease forwards;
  }

  .code-line:nth-child(1) { animation-delay: 0.2s; }
  .code-line:nth-child(2) { animation-delay: 0.4s; }
  .code-line:nth-child(3) { animation-delay: 0.6s; }
  .code-line:nth-child(4) { animation-delay: 0.8s; }
  .code-line:nth-child(5) { animation-delay: 1.0s; }
  .code-line:nth-child(6) { animation-delay: 1.2s; }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>